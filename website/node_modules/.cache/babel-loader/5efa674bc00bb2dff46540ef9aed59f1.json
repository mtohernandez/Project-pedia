{"ast":null,"code":"import * as THREE from 'three';\nlet cam,\n    scene,\n    renderer,\n    clock,\n    smokeMaterial,\n    h,\n    w,\n    smokeParticles = [];\n\nconst animate = () => {\n  let delta = clock.getDelta();\n  requestAnimationFrame(animate);\n  [].forEach.call(smokeParticles, sp => {\n    sp.rotation.z += delta * 0.2;\n  });\n  renderer.render(scene, cam);\n},\n      resize = () => {\n  renderer.setSize(window.innerWidth, window.innerHeight);\n},\n      lights = () => {\n  const light = new THREE.DirectionalLight(0xffffff, 0.5);\n  clock = new THREE.Clock();\n  renderer = new THREE.WebGLRenderer();\n  renderer.setClearColor(0x00547f, 1);\n  renderer.setSize(w, h);\n  scene = new THREE.Scene();\n  light.position.set(-1, 0, 1);\n  scene.add(light);\n},\n      camera = () => {\n  cam = new THREE.PerspectiveCamera(75, w / h, 1, 10000);\n  cam.position.z = 1000;\n  scene.add(cam);\n},\n      action = () => {\n  const loader = new THREE.TextureLoader();\n  loader.crossOrigin = \"\";\n  loader.load(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/82015/blue-smoke.png\", function onLoad(texture) {\n    const smokeGeo = new THREE.PlaneBufferGeometry(300, 300);\n    smokeMaterial = new THREE.MeshLambertMaterial({\n      map: texture,\n      transparent: true\n    });\n\n    for (let p = 0, l = 350; p < l; p++) {\n      let particle = new THREE.Mesh(smokeGeo, smokeMaterial);\n      particle.position.set(Math.random() * 500 - 250, Math.random() * 500 - 250, Math.random() * 1000 - 100);\n      particle.rotation.z = Math.random() * 360;\n      scene.add(particle);\n      smokeParticles.push(particle);\n    }\n\n    animate();\n  });\n},\n      init = () => {\n  h = window.innerHeight;\n  w = window.innerWidth;\n  lights(); //ðŸ’¡\n\n  camera(); // ðŸŽ¥\n\n  action(); // ðŸŽ¬\n\n  document.body.appendChild(renderer.domElement);\n  window.addEventListener(\"resize\", resize);\n};\n\nconst smoke = () => {\n  return init();\n};\n\nexport default smoke;","map":{"version":3,"sources":["C:/SkyRing/Project Helena Shine/Website/website/src/smoke.js"],"names":["THREE","cam","scene","renderer","clock","smokeMaterial","h","w","smokeParticles","animate","delta","getDelta","requestAnimationFrame","forEach","call","sp","rotation","z","render","resize","setSize","window","innerWidth","innerHeight","lights","light","DirectionalLight","Clock","WebGLRenderer","setClearColor","Scene","position","set","add","camera","PerspectiveCamera","action","loader","TextureLoader","crossOrigin","load","onLoad","texture","smokeGeo","PlaneBufferGeometry","MeshLambertMaterial","map","transparent","p","l","particle","Mesh","Math","random","push","init","document","body","appendChild","domElement","addEventListener","smoke"],"mappings":"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","sourcesContent":["import * as THREE from 'three';\r\n    \r\n    let cam,\r\n    scene,\r\n    renderer,\r\n    clock,\r\n    smokeMaterial,\r\n    h,\r\n    w,\r\n    smokeParticles = [];\r\n\r\n    const animate = () => {\r\n        let delta = clock.getDelta();\r\n\r\n        requestAnimationFrame(animate);\r\n\r\n        [].forEach.call(smokeParticles, (sp) => {\r\n            sp.rotation.z += delta * 0.2;\r\n        });\r\n\r\n        renderer.render(scene, cam);\r\n    },\r\n    resize = () => {\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n    },\r\n    lights = () => {\r\n        const light = new THREE.DirectionalLight(0xffffff, 0.5);\r\n\r\n        clock = new THREE.Clock();\r\n\r\n        renderer = new THREE.WebGLRenderer();\r\n        renderer.setClearColor(0x00547f, 1);\r\n        renderer.setSize(w, h);\r\n\r\n        scene = new THREE.Scene();\r\n\r\n        light.position.set(-1, 0, 1);\r\n        scene.add(light);\r\n    },\r\n    camera = () => {\r\n        cam = new THREE.PerspectiveCamera(75, w / h, 1, 10000);\r\n\r\n        cam.position.z = 1000;\r\n\r\n        scene.add(cam);\r\n    },\r\n    action = () => {\r\n        const loader = new THREE.TextureLoader();\r\n\r\n        loader.crossOrigin = \"\";\r\n\r\n        loader.load(\r\n            \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/82015/blue-smoke.png\",\r\n            function onLoad(texture) {\r\n                const smokeGeo = new THREE.PlaneBufferGeometry(300, 300);\r\n\r\n                smokeMaterial = new THREE.MeshLambertMaterial({\r\n                    map: texture,\r\n                    transparent: true\r\n                });\r\n\r\n                for (let p = 0, l = 350; p < l; p++) {\r\n                    let particle = new THREE.Mesh(smokeGeo, smokeMaterial);\r\n\r\n                    particle.position.set(\r\n                        Math.random() * 500 - 250,\r\n                        Math.random() * 500 - 250,\r\n                        Math.random() * 1000 - 100\r\n                    );\r\n\r\n                    particle.rotation.z = Math.random() * 360;\r\n                    scene.add(particle);\r\n                    smokeParticles.push(particle);\r\n                }\r\n\r\n                animate();\r\n            }\r\n        );\r\n    },\r\n    init = () => {\r\n        h = window.innerHeight;\r\n        w = window.innerWidth;\r\n\r\n        lights(); //ðŸ’¡\r\n        camera(); // ðŸŽ¥\r\n        action(); // ðŸŽ¬\r\n\r\n        document.body.appendChild(renderer.domElement);\r\n        window.addEventListener(\"resize\", resize);\r\n    };\r\n\r\nconst smoke = () =>{\r\n    return(\r\n        init()\r\n    );\r\n}\r\n\r\nexport default smoke;"]},"metadata":{},"sourceType":"module"}