{"ast":null,"code":"import { clamp } from \"tsparticles-engine\";\nexport function absorb(p1, p2, fps, pixelRatio) {\n  if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n    p1.destroy();\n  } else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n    p2.destroy();\n  } else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n    if (p1.getRadius() >= p2.getRadius()) {\n      const factor = clamp(p1.getRadius() / p2.getRadius(), 0, p2.getRadius()) * fps;\n      p1.size.value += factor;\n      p2.size.value -= factor;\n\n      if (p2.getRadius() <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n      }\n    } else {\n      const factor = clamp(p2.getRadius() / p1.getRadius(), 0, p1.getRadius()) * fps;\n      p1.size.value -= factor;\n      p2.size.value += factor;\n\n      if (p1.getRadius() <= pixelRatio) {\n        p1.size.value = 0;\n        p1.destroy();\n      }\n    }\n  }\n}","map":{"version":3,"sources":["C:/SkyRing/Project Helena Shine/Website/website/node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js"],"names":["clamp","absorb","p1","p2","fps","pixelRatio","getRadius","undefined","destroy","factor","size","value"],"mappings":"AAAA,SAASA,KAAT,QAAsB,oBAAtB;AACA,OAAO,SAASC,MAAT,CAAgBC,EAAhB,EAAoBC,EAApB,EAAwBC,GAAxB,EAA6BC,UAA7B,EAAyC;AAC5C,MAAIH,EAAE,CAACI,SAAH,OAAmBC,SAAnB,IAAgCJ,EAAE,CAACG,SAAH,OAAmBC,SAAvD,EAAkE;AAC9DL,IAAAA,EAAE,CAACM,OAAH;AACH,GAFD,MAGK,IAAIN,EAAE,CAACI,SAAH,OAAmBC,SAAnB,IAAgCJ,EAAE,CAACG,SAAH,OAAmBC,SAAvD,EAAkE;AACnEJ,IAAAA,EAAE,CAACK,OAAH;AACH,GAFI,MAGA,IAAIN,EAAE,CAACI,SAAH,OAAmBC,SAAnB,IAAgCJ,EAAE,CAACG,SAAH,OAAmBC,SAAvD,EAAkE;AACnE,QAAIL,EAAE,CAACI,SAAH,MAAkBH,EAAE,CAACG,SAAH,EAAtB,EAAsC;AAClC,YAAMG,MAAM,GAAGT,KAAK,CAACE,EAAE,CAACI,SAAH,KAAiBH,EAAE,CAACG,SAAH,EAAlB,EAAkC,CAAlC,EAAqCH,EAAE,CAACG,SAAH,EAArC,CAAL,GAA4DF,GAA3E;AACAF,MAAAA,EAAE,CAACQ,IAAH,CAAQC,KAAR,IAAiBF,MAAjB;AACAN,MAAAA,EAAE,CAACO,IAAH,CAAQC,KAAR,IAAiBF,MAAjB;;AACA,UAAIN,EAAE,CAACG,SAAH,MAAkBD,UAAtB,EAAkC;AAC9BF,QAAAA,EAAE,CAACO,IAAH,CAAQC,KAAR,GAAgB,CAAhB;AACAR,QAAAA,EAAE,CAACK,OAAH;AACH;AACJ,KARD,MASK;AACD,YAAMC,MAAM,GAAGT,KAAK,CAACG,EAAE,CAACG,SAAH,KAAiBJ,EAAE,CAACI,SAAH,EAAlB,EAAkC,CAAlC,EAAqCJ,EAAE,CAACI,SAAH,EAArC,CAAL,GAA4DF,GAA3E;AACAF,MAAAA,EAAE,CAACQ,IAAH,CAAQC,KAAR,IAAiBF,MAAjB;AACAN,MAAAA,EAAE,CAACO,IAAH,CAAQC,KAAR,IAAiBF,MAAjB;;AACA,UAAIP,EAAE,CAACI,SAAH,MAAkBD,UAAtB,EAAkC;AAC9BH,QAAAA,EAAE,CAACQ,IAAH,CAAQC,KAAR,GAAgB,CAAhB;AACAT,QAAAA,EAAE,CAACM,OAAH;AACH;AACJ;AACJ;AACJ","sourcesContent":["import { clamp } from \"tsparticles-engine\";\nexport function absorb(p1, p2, fps, pixelRatio) {\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        if (p1.getRadius() >= p2.getRadius()) {\n            const factor = clamp(p1.getRadius() / p2.getRadius(), 0, p2.getRadius()) * fps;\n            p1.size.value += factor;\n            p2.size.value -= factor;\n            if (p2.getRadius() <= pixelRatio) {\n                p2.size.value = 0;\n                p2.destroy();\n            }\n        }\n        else {\n            const factor = clamp(p2.getRadius() / p1.getRadius(), 0, p1.getRadius()) * fps;\n            p1.size.value -= factor;\n            p2.size.value += factor;\n            if (p1.getRadius() <= pixelRatio) {\n                p1.size.value = 0;\n                p1.destroy();\n            }\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}